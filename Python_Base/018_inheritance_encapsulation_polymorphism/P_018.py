# coding=utf-8
# *******************************************************************************************
# 018 - Наследование, инкапсуляция, полиморфизм
# Gosha Dudar, 2017
# *******************************************************************************************
# Writing sgiman, 2017
# Last Modification, 2022, aug
# -------------------------------------------------------------------------------------------
# Наследование - заимствование свойств и методов от основного класса c целью расширения
# Инкапсуляция - защита данных класса (ограничение доступа к свойтсвам и методам) - удобная
# Полиморфизм -  использование одного и того же метода, но по разному в разных классах
#

# *************
#     Класс
# *************
class Person:
    name = "Ivan"  # Параметры
    # __name = "Ivan"               # "__' инкапсуляция для ограничения дотупа наследникам
    age = 10

    def set(self, name, age):  # Метод, self - содержит экземпяор класса (this)
        self.name = name
        self.age = age


#    def __set(self, name, age):    # Инкапсуляция метода "__"
#        self.name = name
#        self.age = age

class Student(Person):  # Наследование основного класса Person
    course = 1


igor = Student()
igor.set("Igor", 19)
igor.course = 2
print(igor.name)
print(igor.course)

print("\n*** 1 ***")
vlad = Person()  # Новый объект класса Person
vlad.set("Влад", 25)  # Новые характеристики объекта для класса
print(vlad.name + " " + str(vlad.age))

print("\n*** 2 ***")
ivan = Person()  # Новый объект класса Person
ivan.set("Иван", 56)  # Новые характеристики объекта для класса
print(ivan.name + " " + str(ivan.age))
